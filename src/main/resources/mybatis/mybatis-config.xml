<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE configuration PUBLIC "-//mybatis.org//DTD Config 3.3.0//EN" "http://mybatis.org/dtd/mybatis-3-config.dtd">
<configuration>
	<!--属性设置-->
	<properties>
		<!-- 查询结果集最大限制。避免因sql写法有误或条件设置不合理导致查询出大量结果集造成的内存溢出 
		<property name="maxLimitResultset" value="10000"/>
		-->
	</properties>
	
    <!-- 基础设置 -->
    <!--<settings>-->
        <!-- 全局映射器启用二级缓存 -->
        <!--<setting name="cacheEnabled" value="true" />-->
        <!-- 查询时，关闭关联对象即时加载以提高性能 -->
        <!--<setting name="lazyLoadingEnabled" value="true" />-->
        <!-- 设置关联对象加载的形态，此处为按需加载字段(加载字段由SQL指 定)，不会加载关联表的所有字段，以提高性能 -->
        <!--<setting name="aggressiveLazyLoading" value="false" />-->
        <!-- 对于未知的SQL查询，允许返回不同的结果集以达到通用的效果 -->
        <!--<setting name="multipleResultSetsEnabled" value="true" />-->
        <!-- 允许使用列标签代替列名 -->
        <!--<setting name="useColumnLabel" value="true" />-->
        <!-- 允许使用自定义的主键值(比如由程序生成的UUID 32位编码作为键值)，数据表的PK生成策略将被覆盖 -->
        <!--<setting name="useGeneratedKeys" value="true" />-->
        <!-- 给予被嵌套的resultMap以字段-属性的映射支持 -->
        <!--<setting name="autoMappingBehavior" value="FULL" />-->
        <!-- SIMPLE：默认；REUSE：批量更新操作缓存SQL以提高性能； BATCH：批量更新模式，提高更新效率，但获取不到影响行数。-->
        <!--<setting name="defaultExecutorType" value="REUSE" />-->
        <!-- 数据库超过600秒仍未响应则超时 -->
        <!--<setting name="defaultStatementTimeout" value="600" />-->
        <!-- 设置但JDBC类型为空时,某些驱动程序 要指定值,default:OTHER -->
        <!--<setting name="jdbcTypeForNull" value="NULL" />-->
    <!--</settings>-->
    
	<!-- 类型处理 -->
    <!--<typeHandlers>-->
    	<!--Start: oracle特有类型处理器注册。后续如还有其他类型不能正确处理，按此添加类型处理器即可。 -->
        <!--<typeHandler javaType="oracle.sql.CLOB" jdbcType="CLOB" handler="org.apache.ibatis.type.ClobTypeHandler" />-->
        <!--<typeHandler javaType="oracle.sql.BLOB" jdbcType="BLOB" handler="org.apache.ibatis.type.BlobTypeHandler" />-->
        <!--<typeHandler javaType="oracle.sql.NCLOB" jdbcType="NCLOB" handler="org.apache.ibatis.type.NClobTypeHandler" />-->
        <!--End: oracle特有类型处理器注册。后续如还有其他类型不能正确处理，按此添加类型处理器即可。 -->
    <!--</typeHandlers>-->
	
	
	<!-- 插件配置 -->
    <!--<plugins>-->
    	<!-- walkbatis拦截器 -->
        <!--<plugin interceptor="org.walkframework.batis.plugins.WalkbatisPlugin" />-->
    <!--</plugins>-->

    <!--
        plugins在配置文件中的位置必须符合要求，否则会报错，顺序如下:
        properties?, settings?,
        typeAliases?, typeHandlers?,
        objectFactory?,objectWrapperFactory?,
        plugins?,
        environments?, databaseIdProvider?, mappers?
    -->
    <plugins>
        <!-- com.github.pagehelper为PageHelper类所在包名 -->
        <plugin interceptor="com.github.pagehelper.PageInterceptor">
            <!--分页参数合理化 -->
            <!--reasonable：分页合理化参数，默认值为false。当该参数设置为 true 时，
            pageNum<=0 时会查询第一页，pageNum>pages（超过总数时），会查询最后一页。
            默认false 时，直接根据参数进行查询。-->
            <property name="reasonable" value="true"/>
        </plugin>
    </plugins>

    <!-- SQL映射文件，在这只配jar包中的文件，工程sql文件通过Spring自动扫描进行加载-->
    <!--<mappers>-->
        <!--<mapper resource="batis/common/sql/EntitySQL.xml" />	&lt;!&ndash; walk-batis基础sql文件。该文件在walk-batis-*.jar中 &ndash;&gt;-->
        <!--<mapper resource="base/common/sql/CommonSQL.xml" />		&lt;!&ndash; BaseSqlSessionDao实现需要的sql文件。该文件在walk-base-*.jar中 &ndash;&gt;-->
        <!--<mapper resource="biz/common/UserSQL.xml" />			&lt;!&ndash; 业务通用sql。该文件在biz-common-*.jar中 &ndash;&gt;-->
    <!--</mappers>-->
</configuration>
