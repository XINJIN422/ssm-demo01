<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:beans="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:cache="http://www.springframework.org/schema/cache" xmlns:p="http://www.springframework.org/schema/p"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/cache
        http://www.springframework.org/schema/cache/spring-cache.xsd">

    <description>redis缓存配置管理文件-自定义操作</description>

    <!--配置redis连接池-->
    <beans:import resource="classpath:spring/cache/redis-pool.xml"/>
    <!--spring-data-redis2.0以上的配置-->
    <bean id="redisPassword" class="org.springframework.data.redis.connection.RedisPassword">
        <constructor-arg name="thePassword" value="${redis.password}"/>
    </bean>
    <bean id="redisStandaloneConfiguration" class="org.springframework.data.redis.connection.RedisStandaloneConfiguration" >
        <property name="hostName" value="${redis.cache.host}"/>
        <property name="port" value="${redis.cache.port}"/>
        <property name="password" ref="redisPassword"/>
        <property name="database" value="${redis.cache.dbIndex}"/>
    </bean>
    <!-- MyRedisClientConfigFactoryBean继承了FactoryBean,实现了默认方法,所以不要在用factory-bean factory-method之类属性来指定了,直接获得目标对象-->
    <bean id="jedisClientConfiguration" class="com.yangkang.ssmdemo01.redis.MyRedisClientConfigFactoryBean">
        <property name="poolConfig" ref="redisPoolConfig"/>
    </bean>
    <bean id="redisConnectionFactory" class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory">
        <!--spring-data-redis2.0以上建议获取的方式-->
        <constructor-arg name="standaloneConfig" ref="redisStandaloneConfiguration"/>
        <constructor-arg name="clientConfig" ref="jedisClientConfiguration"/>
    </bean>

    <!-- 以下bean都放入注解配置中去生成,因为spring-data-redis2.0以上的自定义xml配置太复杂了-->
    <!--手动设置 key 与 value 的序列化方式-->
    <!--redis模板操作类-->
    <!--也可以StringRedisTemplate 专注于String的操作-->
    <!--开启spring缓存注解-->
    <!--交给spring的RedisCacheManager管理-->
    <bean class="com.yangkang.ssmdemo01.redis.MyRedisConfig"/>
    <!--<bean id="redisWriter" class="org.springframework.data.redis.cache.DefaultRedisCacheWriter">-->
        <!--<constructor-arg name="connectionFactory" ref="redisConnectionFactory"/>-->
    <!--</bean>-->

    <!--自定义的redis操作工具类-->
    <bean id="myRedisCacheUtil" class="com.yangkang.ssmdemo01.redis.MyRedisCacheUtil">
        <property name="redisTemplate" ref="redisTemplate"/>
    </bean>
</beans>